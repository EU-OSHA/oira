<?php

function osha_sitemap_menu_alter(&$items) {
  $items['sitemap.xml']['page callback'] = 'osha_sitemap_output_sitemap';
}

function osha_sitemap_output_sitemap() {
  global $language;

  if (request_uri() == '/sitemap.xml') {
    osha_sitemap_get_all_sitemaps();
  }
  else {

    $context['language'] = 'en';
    $sitemap = xmlsitemap_sitemap_load_by_context($context);
    if (!$sitemap) {
      return MENU_NOT_FOUND;
    }

    $chunk = xmlsitemap_get_current_chunk($sitemap);
    $file = xmlsitemap_sitemap_get_file($sitemap, $chunk);

    // Provide debugging information if enabled.
    if (variable_get('xmlsitemap_developer_mode', 0) && isset($_GET['debug'])) {
      $output = array();
      $context = xmlsitemap_get_current_context();
      $output[] = "Current context: " . print_r($context, TRUE);
      $output[] = "Sitemap: " . print_r($sitemap, TRUE);
      $output[] = "Chunk: $chunk";
      $output[] = "Cache file location: $file";
      $output[] = "Cache file exists: " . (file_exists($file) ? 'Yes' : 'No');
      return implode('<br />', $output);
    }

    if ($language->language == 'en') {
      return xmlsitemap_output_file($file);
    }
    osha_sitemap_output_file($file, [], $language->language);
  }
}

function osha_sitemap_output_file($file, array $headers = array(), $language) {
  if (!file_exists($file) || !is_readable($file)) {
    return MENU_NOT_FOUND;
  }

  $mtime = filemtime($file);
  $last_modified = gmdate(DATE_RFC1123, $mtime);
  $etag = '"' . md5($last_modified) . '"';

  // See if the client has provided the required HTTP headers.
  $if_modified_since = isset($_SERVER['HTTP_IF_MODIFIED_SINCE']) ? stripslashes($_SERVER['HTTP_IF_MODIFIED_SINCE']) : FALSE;
  $if_none_match = isset($_SERVER['HTTP_IF_NONE_MATCH']) ? stripslashes($_SERVER['HTTP_IF_NONE_MATCH']) : FALSE;
  if ($if_modified_since && $if_none_match && $if_none_match == $etag && $if_modified_since == $last_modified) {
    header('HTTP/1.1 304 Not Modified');
    // All 304 responses must send an etag if the 200 response for the same object contained an etag
    header('Etag: ' . $etag);
    exit;
  }

  $headers += array(
    'Content-type' => 'text/xml; charset=utf-8',
    //'Content-length' => filesize($file),
    'Last-modified' => $last_modified,
    'Etag' => $etag,
    'Expires' => gmdate(DATE_RFC1123, $mtime + variable_get('xmlsitemap_minimum_lifetime', 0)),
    'Cache-Control' => 'must-revalidate',
    'X-Robots-Tag' => 'noindex, follow',
  );

  // Transfer the file as output.
  osha_sitemap_file_transfer($file, $headers, $language);
}

function osha_sitemap_file_transfer($uri, $headers, $language) {
  if (ob_get_level()) {
    ob_end_clean();
  }

  foreach ($headers as $name => $value) {
    drupal_add_http_header($name, $value);
  }
  drupal_send_headers();

  // Attempt to increase time to transfer file.
  drupal_set_time_limit(240);

  $scheme = variable_get('file_default_scheme', 'public');
  // Transfer file in 16 KB chunks to save memory usage.
  if ($scheme && file_stream_wrapper_valid_scheme($scheme) && $fd = fopen($uri, 'rb')) {
    while (!feof($fd)) {
      $row = fread($fd, 1024*16);
      $row = str_replace('/en/', '/' . $language . '/', $row);
      print $row;
    }
    fclose($fd);
  }
  else {
    drupal_not_found();
  }
  drupal_exit();
}

function osha_sitemap_get_all_sitemaps() {
  global $base_url;
  $headers = array(
    'Content-type' => 'text/xml; charset=utf-8',
    'Cache-Control' => 'must-revalidate',
    'X-Robots-Tag' => 'noindex, follow',
  );
  foreach ($headers as $name => $value) {
    drupal_add_http_header($name, $value);
  }
  drupal_send_headers();
  $query = db_select('xmlsitemap_sitemap', 'x')
    ->fields('x')
    ->execute();

  $lastmod_format = variable_get('xmlsitemap_lastmod_format', XMLSITEMAP_LASTMOD_MEDIUM);
  $text = '<?xml version="1.0" encoding="UTF-8"?>';
  $text .= '<sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">';
  while($site_map = $query->fetchAssoc()) {
    $context = unserialize($site_map['context']);
    $text .= '<sitemap>';
    $text .= '<loc>' . $base_url . '/' . $context['language'] . '/sitemap.xml' . '</loc>';
    $text .= '<lastmod>' . gmdate($lastmod_format, $site_map['updated']) . '</lastmod>';
    $text .= '</sitemap>';
  }
  $text .= '</sitemapindex>';
  echo $text;
  exit;
}

/**
 * Implements hook_xmlsitemap_link_update().
 */
function osha_sitemap_xmlsitemap_link_update(array $link, array $context) {
  osha_sitemap_exclude_menu_to_node($link);
}

/**
 * Implements hook_xmlsitemap_link_insert().
 */
function osha_sitemap_xmlsitemap_link_insert(array $link, array $context) {
  osha_sitemap_exclude_menu_to_node($link);
}

/**
 * Helper function to exclude menu link to node.
 */
function osha_sitemap_exclude_menu_to_node($link) {
  if ($link['type'] == 'menu_link' && strpos($link['loc'], 'node/') === 0) {
    // Disable this from getting into the sitemap.xml
    $link['status'] = 0;
    drupal_write_record('xmlsitemap', $link, array('type', 'id', 'language'));
  }
}
