<?php
/**
 * @file
 * Code for the Resources feature.
 */

include_once 'osha_resources.features.inc';

/**
 * Define custom view mode for entities - wiki
 */
function osha_resources_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['osha_resources'] = array(
    'label' => t('Additional resource'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_node_view
 * @param $node
 * @param $view_mode
 * @param $langcode
 */
function osha_resources_node_view_alter(&$build){
  if($build['#bundle'] == 'youtube'){
    if(isset($build['field_youtube']) && $build['field_youtube']['#formatter'] == 'youtube_thumbnail'){
      foreach($build['field_youtube'] as $key => $youtube){
        if(is_array($youtube) && isset($youtube['#image_link']['options']))
          $build['field_youtube'][$key]['#image_link']['options']['attributes']['target'] = '_blank';
      }
    }
  }
}

/**
 * Use of osha_title_formatter_' . $entity->type . '_view'.
 *
 * Show the title alt when it's the case.
 */
function osha_title_formatter_external_url_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $display['settings'];
  $output = isset($items[0]) ? $items[0]['safe_value'] : '';
  $entity_wrapper = entity_metadata_wrapper('node', $entity);

  if (!empty($output) && $settings['title_link'] == 'content') {
    if (!empty($entity->field_external_url)) {
      $url = $entity_wrapper->field_external_url->value();
      $uri['path'] = $url['url'];
    }
    else {
      $uri = entity_uri($entity_type, $entity);
    }

    $output = l($output, $uri['path'], array('html' => TRUE, 'attributes' => array('target' => '_blank')));
  }

  $wrap_tag = empty($settings['title_style']) ? '_none' : $settings['title_style'];

  if ($wrap_tag != '_none') {
    $element = array(
      'element' => array(
        '#tag' => $wrap_tag,
        '#value' => $output,
      ),
    );

    if (!empty($settings['title_class'])) {
      $element['#attributes'] = array('class' => $settings['title_class']);
    }

    $output = theme('html_tag', $element);
  }

  $element = array(
    array(
      '#markup' => $output,
    ),
  );

  return $element;
}

/**
 * Implements hook_osha_tmgmt_i18n_string_list().
 */
function osha_resources_osha_tmgmt_i18n_string_list() {
  module_load_include('inc', 'osha_resources', 'osha_resources.translations');
  return osha_resources_get_translatable_strings();
}

/**
 * Implements hook_field_formatter_info().
 */
function osha_resources_field_formatter_info() {
  $info = array(
    'file_as_title' => array(
      'label' => t('Node title as link to file'),
      'field types' => array('file'),
      'description' => t('Link to file using node title as link title.'),
    ),
    'external_url_link' => array(
      'label' => t('External url link with icon'),
      'field types' => array('link_field'),
      'description' => t('Link with new window icon'),
    ),
    'internal_link_title' => array(
      'label' => 'Internal link with node url',
      'field types' => array('link_field'),
      'description' => 'Display link with node url.',
    ),
    'internal_link_text' => array(
      'label' => 'Internal link as text',
      'field types' => array('link_field'),
      'description' => 'Display link as text url.',
    ),
  );
  return $info;
}

/**
 * Implements hook_field_formatter_info_alter().
 */
function osha_resources_field_formatter_info_alter(&$info) {
  // Define extra fields for settings form to save them.
  foreach ($info as &$formatter) {
    if ($formatter['module'] == 'flickrfield') {
      $formatter['settings']['image_class'] = '';
      $formatter['settings']['images_shown'] = 4;
    }
  }
}

/**
 * Implements hook_field_formatter_settings_form_alter().
 */
function osha_resources_field_formatter_settings_form_alter(array &$settings_form, array $context) {
  if ($context['module'] == 'flickrfield') {
    $instance = $context['instance'];
    $view_mode = $context['view_mode'];
    $display = $instance['display'][$view_mode];
    $settings = $display['settings'];
    $settings_form['image_class'] = array(
      '#type' => 'textfield',
      '#title' => t('Image css class'),
      '#default_value' => $settings['image_class'],
    );
    $settings_form['images_shown'] = array(
      '#type' => 'textfield',
      '#title' => t('Number of images'),
      '#default_value' => $settings['images_shown'],
    );
  }
}

/**
 * Implements hook_field_formatter_view().
 */
function osha_resources_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  global $base_url;
  $element = array();

  switch ($display['type']) {
    case 'file_as_title':
      foreach ($items as $delta => $item) {
        $element[$delta] = array(
          '#theme' => 'osha_resources_file_as_title_format',
          '#entity' => $entity,
          '#file' => $item,
          '#delta' => $delta,
        );
      }
      break;

    case 'external_url_link':
      $element = array(
        '#theme' => 'external_url_link',
        '#items' => $items,
        '#entity' => $entity,
      );
      break;

    case 'internal_link_title':
      foreach($items as $delta => $item) {
        $link = l($entity->title, $item['url']);
        if ($entity->type == 'slide' && strncasecmp('http://', $item['url'], 7) != 0 && strncasecmp('https://', $item['url'], 8) != 0) {
          $url = $base_url . $item['url'];
          $link = l($entity->title, $url);
        }
        $element[$delta]['#markup'] = $link;
      }
      break;
    case 'internal_link_text':
      foreach($items as $delta => $item) {
        $url = $item['url'];
        if ($entity->type == 'slide' && strncasecmp('http://', $item['url'], 7) != 0 && strncasecmp('https://', $item['url'], 8) != 0) {
          $url = $base_url . $item['url'];
        }
        $element[$delta]['#markup'] = $url;
      }
      break;
  }
  return $element;
}

/**
 * Implements hook_theme().
 */
function osha_resources_theme() {
  $path = drupal_get_path('module', 'osha_resources');
  return array(
    'osha_resources_file_as_title_format' => array(
      'variables' => array('entity' => NULL, 'file' => NULL, 'delta' => NULL),
    ),
    'external_url_link' => array(
      'template' => 'osha_resources_external_url_link',
      'variables' => array(
        'items' => NULL,
        'entity' => NULL,
      ),
      'path' => $path . '/templates',
    ),
  );
}

/*
 * Formats the file as title
 */
function theme_osha_resources_file_as_title_format($element) {
  $file = (object) $element['file'];
  $entity = (object) $element['entity'];
  $icon_directory = drupal_get_path('theme', 'osha_frontend') . '/images/file_icons';

  global $language;
  $name = isset($entity->title_field[$language->language][0])
    ? $entity->title_field[$language->language][0]['value']
    : $entity->title_field['en'][0]['value'];
  $output = '<a href="' . file_create_url($file->uri) . '">';
  $output .= theme('file_icon', array('file' => $file, 'icon_directory' => $icon_directory));
  $output .= '<span>'.$name.'</span>';
  $size = @filesize($file->uri);
  if ($size) {
    $output .= '<span class="related_size">(' . format_size($size) . ')</span>';
  }
  $output .= '</a>';

  return $output;
}
