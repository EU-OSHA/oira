<?php

function ncw_migration_menu() {
  $items['admin/config/system/ncw_migration'] = array(
    'title' => 'NCW Migration configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ncw_migration_config_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'ncw_migration.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements Elysia hook_cronapi().
 */
function ncw_migration_cronapi() {
  return array('ncw_migration_cron' => array(
    'description' => 'Migrate NCW content',
    'rule' => '0 3 * * *',
  ));
}

/**
 * Implements hook_cron().
 */
function ncw_migration_cron() {
  include_once 'ncw_migration.drush.inc';
  drush_ncw_migration_hwc_migrate_all();
}

/**
 * List of bundles periodically updated from the corporate website
 * @return array
 *   Array of bundles
 */
function ncw_migration_get_migrated_bundles() {
  return array(
    'news', 'highlights', 'wiki_pages',
  );
}

/**
 * @param string $machine_name
 *   Migration machine name
 *
 * @return boolean
 *   Returns TRUE if migration was successful
 *
 * @throws \Exception
 */
function ncw_migration_run_single($machine_name) {
  migrate_static_registration(array($machine_name));
  /** @var Migration $migration */
  $migration = Migration::getInstance($machine_name);
  $migration->prepareUpdate();
  $result = $migration->processImport();
  if ($result == MigrationBase::RESULT_COMPLETED) {
    return TRUE;
  }
  else {
    watchdog(
      'ncw_migration',
      '[CRON]Last CW import did not finished successfully (machine:!machine_name)',
      array('!machine_name' => $machine_name)
    );
    return FALSE;
  }
}

function ncw_migration_debug($message, $message_args = array(), $level = 'notice') {
  if(function_exists('drush_get_option')) {
    // Message appear when running 'drush -d migrate-import events'
    if ($debug = drush_get_option('debug')) {
      $str = format_string($message, $message_args);
      drush_log($str, $level);
    }
  }
}


