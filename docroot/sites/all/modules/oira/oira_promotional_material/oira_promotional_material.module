<?php
/**
 * @file
 * Code for the OiRA Promotional material feature.
 */

include_once 'oira_promotional_material.features.inc';

/**
 * Implements hook_block_info().
 */
function oira_promotional_material_block_info() {
  $blocks = array();
  $blocks['oira_promotional_listing'] = array(
    'info' => t('Promotional materials listing'),
    'status' => 1,
    'region' => '-1',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_field_extra_fields_alter().
 */
function oira_promotional_material_field_extra_fields_alter(&$info) {
  $info['node']['promotional_material']['display']['related_partners'] = $info['node']['practical_tool']['display']['related_partners'];
  $info['node']['promotional_material']['display']['tools_see_more'] = $info['node']['practical_tool']['display']['tools_see_more'];
}

function _oira_promotional_material_get_url($entity) {
  global $language;
  $url = '';
  $wrapper = entity_metadata_wrapper('node', $entity);
  if (!empty($entity->field_resource_fc)) {
    foreach ($wrapper->field_resource_fc as $fc) {
      if ($fc->field_language->value()['value'] == $language->language) {
        if (!empty($fc->field_link)) {
          $url = $fc->field_link->value()['url'];
        }
        elseif (!empty($fc->field_file)) {
          $file = $fc->field_file->value();
          $url = file_create_url($file['uri']);
        }
      }
    }
  }
  return $url;
}


/**
 * Use of osha_title_formatter_' . $entity->type . '_view'.
 *
 * Show the title alt when it's the case.
 */
//function osha_title_formatter_promotional_material_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
//  global $language;
//
//  $settings = $display['settings'];
//  $output = isset($items[0]) ? $items[0]['safe_value'] : '';
//
//  $entity_wrapper = entity_metadata_wrapper('node', $entity);
//  if (!empty($output) && $settings['title_link'] == 'content') {
//    $uri['url'] = _oira_promotional_material_get_url($entity);
//    if (empty($uri)) {
//      $uri = entity_uri($entity_type, $entity);
//    }
//    $output = l($output, $uri['url'], array('html' => TRUE, 'attributes' => array('target' => '_blank')));
//  }
//
//  $wrap_tag = empty($settings['title_style']) ? '_none' : $settings['title_style'];
//
//  if ($wrap_tag != '_none') {
//    $element = array(
//      'element' => array(
//        '#tag' => $wrap_tag,
//        '#value' => $output,
//      ),
//    );
//
//    if (!empty($settings['title_class'])) {
//      $element['#attributes'] = array('class' => $settings['title_class']);
//    }
//
//    $output = theme('html_tag', $element);
//  }
//
//  $element = array(
//    array(
//      '#markup' => $output,
//    ),
//  );
//
//  return $element;
//}



/**
 * Implements hook_block_view().
 */
function oira_promotional_material_block_view($delta = '') {
  $block = [];
  switch ($delta) {
    case 'oira_promotional_listing':
      module_load_include('inc', 'oira_promotional_material', 'oira_promotional_material.pages');
      // Re-use some functions from hwc_practical_tool module
      module_load_include('inc', 'hwc_practical_tool', 'hwc_practical_tool.pages');
      $block['content'] = drupal_get_form('oira_promotional_material_search_form');
      break;
  }
  return $block;
}

/**
 * Implements hook_taxonomy_term_view().
 */
function oira_promotional_material_taxonomy_term_view($term, $view_mode, $langcode) {
  $voc = taxonomy_vocabulary_machine_name_load('promotional_material_type');
  if ($term->vid == $voc->vid && $view_mode == 'full') {
    drupal_goto('promotional-resources/search', ['query' => ['field_promotional_material_type' => [$term->tid]]]);
  }
}

/**
 * Use of osha_title_formatter_' . $entity->type . '_view'.
 *
 * Link the term title to promotional materials search page.
 */
function osha_title_formatter_promotional_material_type_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $voc = taxonomy_vocabulary_machine_name_load('promotional_material_type');
  $return = '';
  if (($entity_type == 'taxonomy_term')
    && ($entity->vid == $voc->vid)
    && ($field['field_name'] == 'name_field')) {
    $item = reset($items);
    $return = [
      '#markup' => l($item['value'], 'promotional-resources/search', ['query' => ['field_promotional_material_type' => [$entity->tid]]]),
    ];
  }
  return [$return];
}

/**
 * Implements hook_form_alter().
 */
function oira_promotional_material_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'promotional_material_node_form':
      $form['field_country']['#access'] = FALSE;
      break;
  }
}

/**
 * Implements hook_node_submit().
 */
function oira_promotional_material_node_submit($node, $form, &$form_state) {
  if ($node->type == 'promotional_material') {
    if (!empty($node->workbench_access)) {
      $partner = oira_partner_by_section_id_load($node->workbench_access);
      if (!empty($partner)) {
        $node->field_country = $partner->field_country;
        node_save($node);
      }
    }
  }
}

/**
 * Implements hook_node_presave().
 */
function oira_promotional_material_node_presave($node) {
  if ($node->type == 'partner') {
    $old_country = !empty($node->original->field_country) && !empty($node->original->field_country[LANGUAGE_NONE])
      ? $node->original->field_country[LANGUAGE_NONE][0]['tid']
      : NULL;
    $new_country = !empty($node->field_country) && !empty($node->field_country[LANGUAGE_NONE])
      ? $node->field_country[LANGUAGE_NONE][0]['tid']
      : NULL;
    if ($old_country !== $new_country) {
      $q = db_select('workbench_access_node', 'w');
      $q->innerJoin('node', 'n', 'w.nid = n.nid');
      $q->fields('n', ['nid'])
        ->condition('n.type', 'promotional_material')
        ->condition('w.access_id', $node->workbench_access);
      $pm_nids = $q->execute()->fetchCol();
      foreach ($pm_nids as $nid) {
        field_attach_update('node', (object) [
          'nid' => $nid,
          'type' => 'promotional_material',
          'field_country' => $node->field_country,
        ]);
      }
    }
  }
}
