<?php

// We need these 2 functions (hwc_req_param() and _hwc_segment_options_list())
// because they are used within modules copied from hwc website.
function hwc_req_param($form_state, $name, $default = NULL) {
  if (!empty($form_state['values'][$name])) {
    $ret = $form_state['values'][$name];
  }
  if (!empty($_GET[$name])) {
    if (is_array($_GET[$name])) {
      $ret = array();
      foreach($_GET[$name] as $v) {
        $ret[] = check_plain($v);
      }
    }
    else {
      $ret = check_plain($_GET[$name]);
    }
  }
  if (!empty($ret)) {
    if (is_array($ret)) {
      $ret = array_filter($ret);
    }
    return $ret;
  }
  return $default;
}

function _hwc_segment_options_list() {
  $return = array('0' => t('All audience'));
  $vocabulary = taxonomy_vocabulary_machine_name_load('segment');
  if (!empty($vocabulary)) {
    $terms = taxonomy_term_load_multiple(array(), array('vid' => $vocabulary->vid));
    foreach($terms as $key => $term) {
      $return[$term->tid] = $term->name;
    }
  }
  return $return;
}

/**
 * Implements hook_theme().
 */
function oira_theme() {
  return array(
    'news_share_widget' => array(
      'variables' => array(
        'url' => '', // Page URL
        'node' => array(), // Current node
        'tweet_url' => '',
        'language' => '', // Current language
        'options' => array(), // Additional configuration options
      ),
      'template' => 'templates/news_share_widget',
    ),
    'article_share_widget' => array(
      'variables' => array(
        'url' => '', // Page URL
        'node' => array(), // Current node
        'tweet_url' => '',
        'language' => '', // Current language
        'options' => array(), // Additional configuration options
      ),
      'template' => 'templates/article_share_widget',
    ),
  );
}

/**
 * Implements hook_node_view().
 */
function oira_node_view($node, $view_mode, $langcode) {
  $share_widget_content_types = array(
    'news',
    'events',
    'article',
    'practical_tool',
  );
  // Array of nids where to hide the share widget.
  $no_share_widget = array();
  if ($view_mode == 'full'
    && in_array($node->type, $share_widget_content_types)
    && !in_array($node->nid, $no_share_widget)) {
    $options = array();
    if (in_array($node->type, array('article'))) {
      $options['rss_hide'] = 1;
    }
    if ($node->type == 'events') {
      $options['rss_url'] = url('rss-feeds/latest/events.xml', array('absolute' => TRUE));
    }

    $node->content['share_widget'] = array('#markup' => oira_news_share_widget($node, $options));
  }
}

function oira_news_share_widget($node, $options = array()) {
  global $language;
  /** @var stdClass $wrapper */
  $type = 'other';
  if (!empty($options['page']) && $options['page'] === TRUE) {
    $url = url(current_path(), array('absolute' => TRUE));
    $title = drupal_get_title();
  }
  else {
    $url = url('node/' . $node->nid, array('absolute' => TRUE));
    $title = $node->title;
    $type = $node->type;
  }
  // Add services javascript.
  $site_name = variable_get('site_name', '');
  // Construct the tweet.
  $twitter_text = $title . ' | ' . $site_name;
  $tweet_url = url('https://twitter.com/intent/tweet', array(
    'query' => array(
      'original_referer' => $url,
      'text' => $twitter_text,
      'url' => shorten_url($url),
    ),
  ));
  $vars = array(
    'url' => $url,
    'tweet_url' => $tweet_url,
    'node' => $node,
    'language' => $language,
    'options' => $options,
    'label' => t('Share this article'),
    'type' => $type,
  );
  // Custom label for videos related articles.
  if (!empty($node->nid) && ($node->nid == 160 || $node->nid == 108)) {
    $vars['label'] = t('Share this video');
  }

  // Merge default vars with ones from options.
  $vars = $options + $vars;
  switch ($vars['type']) {
    case 'article':
      $widget = theme('article_share_widget', $vars);
      break;

    default:
      $widget = theme('news_share_widget', $vars);
      break;
  }
  return $widget;
}