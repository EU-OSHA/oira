<?php

include_once 'oira.features.inc';

define('SOLR_SEARCH_INDEX', 'default_multilingual_node_index');

/**
 * Implements hook_menu().
 */
function oira_menu() {
  $items['admin/config/system/oira_config'] = array(
    'title' => 'OiRA configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('oira_configuration_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function oira_theme() {
  return array(
    'news_share_widget' => array(
      'variables' => array(
        'url' => '', // Page URL
        'node' => array(), // Current node
        'tweet_url' => '',
        'language' => '', // Current language
        'options' => array(), // Additional configuration options
      ),
      'template' => 'templates/news_share_widget',
    ),
    'article_share_widget' => array(
      'variables' => array(
        'url' => '', // Page URL
        'node' => array(), // Current node
        'tweet_url' => '',
        'language' => '', // Current language
        'options' => array(), // Additional configuration options
      ),
      'template' => 'templates/article_share_widget',
    ),
  );
}

/**
 * Implements hook_field_extra_fields().
 */
function oira_field_extra_fields() {

  $share_widget = array(
    'display' => array(
      'share_widget' => array(
        'label' => t('Share widget'),
        'description' => t('The bar with links to social websites'),
        'weight' => 0,
      ),
    ),
  );
  $extra['node']['news'] = $share_widget;
  $extra['node']['article'] = $share_widget;
  $extra['node']['practical_tool'] = $share_widget;

  foreach (node_type_get_types() as $node_type => $bundle) {
    $extra['node'][$node_type]['display']['node_type'] = array(
      'label' => t('Node type'),
      'description' => t('The node bundle'),
      'weight' => 0,
    );
  }
  return $extra;
}


/**
 * Implements hook_node_view().
 */
function oira_node_view($node, $view_mode, $langcode) {
  $share_widget_content_types = array(
    'news',
    'article',
    'practical_tool',
  );
  // Array of nids where to hide the share widget.
  $no_share_widget = array();
  if ($view_mode == 'full'
    && in_array($node->type, $share_widget_content_types)
    && !in_array($node->nid, $no_share_widget)) {
    $options = array();
    $extra_fields = field_info_extra_fields('node', $node->type, 'display');
    if (!empty($extra_fields['share_widget']['display']['default']['visible'])) {
      if (in_array($node->type, array('article'))) {
        $options['rss_hide'] = 1;
      }
      $node->content['share_widget'] = array('#markup' => oira_news_share_widget($node, $options));
    }
  }

  $extra_fields = field_info_extra_fields('node', $node->type, 'display');
  $extra_field_pc = $extra_fields['node_type'];
  if (!empty($extra_field_pc['display'][$view_mode]['visible'])) {
    $types = node_type_get_types();
    $display = $extra_fields['node_type']['display'];
    $node->content['node_type'] = [
      '#type' => 'markup',
      '#markup' => t($types[$node->type]->name),
      '#weight' => (int) $display[$view_mode]['weight'],
    ];
  }
}

/**
 * Implements hook_field_attach_view_alter().
 */
function oira_field_attach_view_alter(&$output, $context) {
  if (!empty($context['entity']->type)) {
    if (!empty($output['body'][0]['#markup']) && $context['entity']->type == 'article') {
      $body =& $output['body'][0]['#markup'];
      $count = 0;
      $body = str_replace('--HEADING_PAGINATION--', '<div class="oira-heading-pagination-container"></div>', $body, $count);
      if ($count) {
        drupal_add_js(drupal_get_path('module', 'oira') . '/js/article_heading_pagination.js');
      }
    }
  }
}

function oira_news_share_widget($node, $options = array()) {
  global $language;
  /** @var stdClass $wrapper */
  $type = 'other';
  if (!empty($options['page']) && $options['page'] === TRUE) {
    $url = url(current_path(), array('absolute' => TRUE));
    $title = drupal_get_title();
  }
  else {
    $url = url('node/' . $node->nid, array('absolute' => TRUE));
    $title = $node->title;
    $type = $node->type;
  }
  // Add services javascript.
  $site_name = variable_get('site_name', '');
  // Construct the tweet.
  $twitter_text = $title . ' | ' . $site_name;
  $tweet_url = url('https://twitter.com/intent/tweet', array(
    'query' => array(
      'original_referer' => $url,
      'text' => $twitter_text,
      'url' => shorten_url($url),
    ),
  ));
  $vars = array(
    'url' => $url,
    'tweet_url' => $tweet_url,
    'node' => $node,
    'language' => $language,
    'options' => $options,
    'label' => t('Share this article'),
    'type' => $type,
  );
  // Custom label for videos related articles.
  if (!empty($node->nid) && ($node->nid == 160 || $node->nid == 108)) {
    $vars['label'] = t('Share this video');
  }

  // Merge default vars with ones from options.
  $vars = $options + $vars;
  switch ($vars['type']) {
    case 'article':
      $widget = theme('article_share_widget', $vars);
      break;

    default:
      $widget = theme('news_share_widget', $vars);
      break;
  }
  return $widget;
}

/**
 * Implments hook_form_FORM_ID_alter().
 */
function oira_form_chosen_admin_settings_alter(&$form, $form_state) {
  // Add options to chosen 30.
  $form['chosen_minimum_single']['#options']['30'] = '30';
  $form['chosen_minimum_multiple']['#options']['30'] = '30';
}

function oira_configuration_form($form, &$form_state) {
  $form = array();

  $form = system_settings_form($form);
  return $form;
}

/**
 * Implements hook_entity_info_alter().
 */
function oira_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['body'] = array(
    'label' => t('Body'),
    'custom settings' => TRUE,
  );
}
