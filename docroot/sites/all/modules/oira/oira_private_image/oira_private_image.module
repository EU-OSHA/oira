<?php
/**
 * @file
 * Code for the Private image feature.
 */

include_once 'oira_private_image.features.inc';

/**
 * Implements hook_node_access().
 */
function oira_private_image_node_access($node, $op, $account) {
  $type = is_string($node) ? $node : $node->type;
  if ($type == 'private_album' && $op == 'view') {
    if (array_intersect(
      array(OSHA_WORKFLOW_ROLE_ADMINISTRATOR, ROLE_OIRA_PARTNER, ROLE_OIRA_PROJECT_MANAGER, ROLE_OIRA_SUPERVISOR),
      array_values($account->roles)
    )) {
      return NODE_ACCESS_ALLOW;
    }
    else {
      return NODE_ACCESS_DENY;
    }
  }
  return NODE_ACCESS_IGNORE;
}

/**
 * Implements hook_node_view().
 */
function oira_private_image_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'private_album' && $view_mode == 'full') {
//    $wrapper = entity_metadata_wrapper('node', $node);
    if (!empty($node->content['field_private_images'])) {
      $node->content['field_private_images']['#prefix'] = '';
      $image_deltas = element_children($node->content['field_private_images']);
      $total = count($image_deltas);
      $per_page = 6;
      if ($total > $per_page) {
        $page = pager_default_initialize($total, $per_page);
//        if ($page > 0) {
//          hide($node->content['gallery_cover_image']);
//        }
        $offset = $per_page * $page;
        $showing_deltas = range($offset, $offset + $per_page - 1);
        $remove_deltas = array_diff($image_deltas, $showing_deltas);
        foreach ($remove_deltas as $delta) {
          unset($node->content['field_private_images'][$delta]);
        }
        $node->content['field_private_images']['#suffix'] = theme('pager');
      }
    }
//    $first_image = $wrapper->field_private_images->value()[0];
//    if (!empty($first_image)) {
//      $image_vars = array(
//        'style_name' => 'gallery_cover_image',
//        'path' => $first_image['uri'],
//        'alt' => $node->title,
//      );
//      // Cover image will open first image of gallery.
//      $link = '<a href="javascript:void(0);" onclick="jQuery(\'.field-name-field-images a.colorbox-inline\').eq(0).trigger(\'click\')">' . theme('image_style', $image_vars) . '</a>';
//      $node->content['gallery_cover_image'] = array('#markup' => $link);
//
//    }
  }
}

/**
 * Implements hook_node_update().
 */
function oira_private_image_node_update($node) {
  if ($node->type == 'private_album') {
    if (!empty($node->field_private_images) && !empty($node->field_multiple_sector)) {
      // Append sectors to files.
      $album_terms = $node->field_multiple_sector[LANGUAGE_NONE];
      foreach ($node->field_private_images[LANGUAGE_NONE] as $val) {
        $file = file_load($val['fid']);
        $file_terms = [];
        if (!empty($file->field_multiple_sector[LANGUAGE_NONE])) {
          $file_terms = $file->field_multiple_sector[LANGUAGE_NONE];
        }
        $terms = array_merge($file_terms, $album_terms);
        // Unique terms.
        $terms = array_map("unserialize", array_unique(array_map("serialize", $terms)));
        $file->field_multiple_sector[LANGUAGE_NONE] = $terms;
        file_save($file);
      }
    }
  }
}

/**
 * Implements hook_form_views_exposed_form_alter().
 */
function oira_private_image_form_views_exposed_form_alter(&$form, &$form_state) {
  if ($form['#id'] == 'views-exposed-form-private-images-block-1') {
    $query = db_select('field_data_field_multiple_sector', 'sector')
      ->fields('sector', ['field_multiple_sector_tid', 'field_multiple_sector_tid'])
      ->condition('bundle', 'private_album');
    $result = $query->execute();
    $tids = $result->fetchAllKeyed(0);
    $form['field_multiple_sector_tid']['#options'] = array_intersect_key($form['field_multiple_sector_tid']['#options'], array_flip($tids) + ['All' => 'All']);
    $form['field_multiple_sector_tid']['#options']['All'] = t('Sector') . ' (' . count($tids) . ')';
    $form['field_multiple_sector_tid']['#chosen'] = FALSE;
    $form['#prefix'] = '<div class="container"><span class="filter-show-all">' . t('Show all') . '</span>';
    $form['#suffix'] = '</div>';
    $form['#attached']['js'][] = drupal_get_path('module', 'oira_private_image') . '/js/gallery_filter.js';
  }
}


/**
 * Implements hook_file_download().
 */
function oira_private_image_file_download($uri) {
  // Force image download for private images.
  if (preg_match('/private-images-gallery/', $uri)) {
    $file_name = basename($uri);
    return array('Content-Disposition' => 'attachment; filename=' . $file_name);
  }
  return NULL;
}
